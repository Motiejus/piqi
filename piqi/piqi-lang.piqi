% Piqi language specification
%
% This file contains specificaiton for the Piqi language which is an extension
% of Piqi-spec (piqi.piqi).
%
% Basically, Piqi-lang = Piqi-spec + includes, extensions and typedefs embeeded
% in function parameters.
% 
% Copyright 2009, 2010, 2011, 2012 Anton Lavrik


.include [ .module piqi ]


% The Piqi language, in addition to the Piqi-spec, has includes and extensions
.extend [
    .typedef piqi

    .with.field [
        .name custom-field
        .type word
        .repeated
    ]

    .with.field [ .type include .repeated ]
    .with.field [ .type extend .repeated ]
]


.record [
    .name include

    .field [
        .name module
        .type word
    ]
]


.extend [
    (.field function.input function.output function.error)
    .override

    .with.type function-param
]


.extend [
    (.field record.name variant.name enum.name list.name alias.name)
    .override

    .with (.mode.optional)
]


.variant [
    .name function-param
    .option [ .type name ]
    .option [
        .type record
    ]
    .option [
        .type variant
    ]
    .option [
        .type enum
    ]
    .option [
        .type list
    ]
    .option [
        % note: although anonymous alias doesn't make a lot of sense, we need it
        % for completeness; there's only one use case: when somebody wants to
        % define additional properties inside such alias (e.g. piq-format)
        .type alias
    ]
]


.record [
    .name extend

    .field [
        .name what
        .type extend-target
        .repeated % several typedefs can be specified as an extension
    ]

    .field [
        % whether specified extensions override existing elements

        .name override
        .optional
    ]

    .field [
        .name with
        .type piqi-any % an actual extension object
        .repeated
    ]

    .field [
        % this way of specifying extensions will be deprecated soon

        .type piqi-any % an actual extension object
        .repeated
        .deprecated
    ]
]


.variant [
    .name extend-target

    .option [ .name typedef .type name ]
    .option [
        % previous name for "typedef"; kept for backwards compatibility; will be
        % fully deprecated in future Piqi versions; NOTE: typedef takes
        % precedence over it

        .type name
        .deprecated
    ]
    .option [ .name field .type name ]
    .option [ .name option .type name ]
    .option [ .name import .type name ]
    .option [ .name function .type name ]
]

